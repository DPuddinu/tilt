---
import '../../node_modules/quill/dist/quill.snow.css';

type Props = {
  value?: string;
  label: string;
  name: string;
  placeholder: string;
};
const { value, label, name, placeholder } = Astro.props;
---

<quill-editor data-value={value} data-id={name} data-placeholder={placeholder}>
  <div class='flex h-48 flex-col gap-2'>
    <label for={`${label}-container`} class='label-text capitalize lg:text-base'>{label}</label>
    <div id='loader' class='h-full w-full animate-pulse rounded bg-slate-200'></div>
    <div id={`${label}-container`} class='flex-container hidden max-w-full grow flex-col bg-white'>
      <div id={label} class='content max-w-full text-black'></div>
    </div>
  </div>
</quill-editor>

<script>
  const Quill = await import('quill');

  class QuillEditor extends HTMLElement {
    constructor() {
      super();
      const { value, placeholder, id } = this.dataset;

      const form = document.querySelector('#goal-form') as HTMLFormElement;
      if (!id) throw new Error('Editor ID is required');

      const quillEditor = document.querySelector('quill-editor') as HTMLFormElement;
      const quill = new Quill.default(`#${id}`, {
        modules: {
          toolbar: [[{ header: [1, 2, 3, 4, 5, false] }], ['bold', 'italic', 'underline'], ['link', 'code-block']]
        },
        placeholder,
        theme: 'snow'
      });

      const loader = document.querySelector('#loader');
      loader?.remove();
      const editorContainer = document.querySelector(`#${id}-container`);
      editorContainer?.classList.replace('hidden', 'flex');
      if (value) quill.setContents(JSON.parse(value));
      if (form && form.contains(quillEditor)) {
        form.addEventListener('formdata', (event) =>
          event.formData.append(id, JSON.stringify(quill.getContents().ops))
        );
      }
    }
  }

  customElements.define('quill-editor', QuillEditor);
</script>
