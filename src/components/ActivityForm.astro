---
import TextInput from '@/components/TextInput.astro';
import InputContainer from '@components/InputContainer.astro';
import SubmitButton from '@components/SubmitButton.astro';
import { Icon } from 'astro-icon/components';
import type { TActivity } from 'db/config';

const icons = ['music', 'office', 'programming', 'school', 'muscle', 'book'];
type Props = {
  title?: string;
  activity?: TActivity;
};
const { activity, title } = Astro.props;
---

<section class='flex flex-col gap-8'>
  {title && <h1 class='text-4xl font-bold'>{title}</h1>}

  <form id='activity-form' method='post'>
    <div class='flex flex-col gap-4 rounded border border-base-200 bg-base-200 p-4'>
      <div class='col-span-2 flex flex-col gap-4'>
        <InputContainer HTMLFor='name' label='Activity name'>
          <TextInput
            variant='300'
            value={activity?.name}
            id='create-activity'
            name='name'
            placeholder='insert name...'
          />
        </InputContainer>

        <InputContainer HTMLFor='select-icon-btn' label='Select icon'>
          <div class='flex flex-wrap gap-2'>
            {
              icons.map((name) => (
                <button type='button' class='icon-select-btn' data-icon={name}>
                  <Icon
                    name={name}
                    class:list={[
                      { 'outline outline-warning text-warning': activity?.icon === name }
                    ]}
                    class='h-12 w-12 rounded-lg p-1 focus:text-warning'
                  />
                </button>
              ))
            }
          </div>
          <input id='activity-icon-input' name='icon' required value={activity?.icon} class='h-0 bg-transparent' />
          <span id='activity-icon-input-error' class='hidden text-error'>Icon required</span>
        </InputContainer>

        <InputContainer HTMLFor='color' label='Select color'>
          <input
            id='color-picker'
            type='color'
            min='7'
            max='7'
            value={activity?.color}
            name='color'
            value='#ef4444'
            class='box h-8 w-24 bg-error'
          />
        </InputContainer>

        <div class='flex justify-end gap-4'>
          <slot />
          <SubmitButton className='!btn-warning disabled:!bg-warning'>
            {activity ? 'Update' : 'Create'}
          </SubmitButton>
        </div>
      </div>
    </div>
  </form>
  <style>
    #color-picker {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      background-color: transparent;
      border: none;
      cursor: pointer;
    }
    #color-picker::-webkit-color-swatch {
      height: 100%;
      border-radius: 0.25rem;
      border: 1px solid white;
    }
    #color-picker::-moz-color-swatch {
      height: 100%;
      border: 1px solid white;
    }
  </style>
</section>
<script>
  const iconBtns = document.querySelectorAll<HTMLButtonElement>('.icon-select-btn');
  const iconImgs = document.querySelectorAll<HTMLButtonElement>('.icon-select-btn>svg');
  const selectedIcon = document.querySelector<HTMLInputElement>('#activity-icon-input');
  iconBtns.forEach((btn, i) => {
    btn.addEventListener('click', (e) => {
      if (selectedIcon && btn.dataset.icon) {
        selectedIcon.value = btn.dataset.icon;
      }
      iconImgs.forEach((img, j) => {
        if (j !== i) {
          img.classList.remove('outline', 'outline-warning', 'text-warning');
        } else {
          img.classList.add('outline', 'outline-warning', 'text-warning');
        }
      });
    });
  });
  const submitBtn = document.querySelector<HTMLButtonElement>('#submit-btn');
  submitBtn?.addEventListener('click', (e) => {
    if (!selectedIcon?.value) {
      const error = document.querySelector<HTMLSpanElement>('#activity-icon-input-error');
      error?.classList.remove('hidden');
    }
  });
</script>
