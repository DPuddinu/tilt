---
type Props = {
  title: string;
  id: string;
};
const { id, title } = Astro.props;
---

<div id={id} popover class='mb-0 w-dvw overflow-hidden bg-transparent p-0 md:m-0 md:h-full'>
  <div class='md:fixed md:bottom-0 md:right-0 md:h-dvh'>
    <div
      id='popover-content'
      class='rounded-t-lg border-t border-t-base-300 bg-base-200 p-4 text-base-content md:h-full md:w-[40dvw] md:max-w-md md:border-l md:border-l-base-300'>
      <header class='p-4'><h2 class='text-3xl font-bold'>{title}</h2></header>
      <slot />
    </div>
  </div>
</div>
<style>
  :root {
    --popover-animation-duration: 0.3s;
  }
  @screen md {
    [popover] {
      transform: translateX(100%) !important;
    }
    [popover]:popover-open {
      transform: translateX(0) !important;
    }
    @starting-style {
      [popover]:popover-open {
        transform: translateX(100%) !important;
      }
    }
  }
  [popover]:popover-open {
    transform: translateY(0);
  }
  [popover] {
    transform: translateY(100%);
    transition:
      transform var(--popover-animation-duration) ease-in-out,
      overlay var(--popover-animation-duration) allow-discrete,
      display var(--popover-animation-duration) allow-discrete;
  }

  @starting-style {
    [popover]:popover-open {
      transform: translateY(100%);
    }
  }

  [popover]::backdrop {
    backdrop-filter: blur(2px);
    transition:
      display var(--popover-animation-duration) allow-discrete,
      overlay var(--popover-animation-duration) allow-discrete,
      background-color var(--popover-animation-duration);
  }
</style>
