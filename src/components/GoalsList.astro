---
import GoalRow from '@/pages/goals/_components/GoalRow.astro';
import Card from './Card.astro';

type Props = {
  title: string;
  goals: any[];
  totalRows: number;
  totalPages: number;
  offset: number;
  currentPage: number;
  itemsPerPage: number;
  queryParams: Record<string, string | null> | undefined;
};
const { title, goals, totalPages, offset, currentPage, itemsPerPage, queryParams } = Astro.props;
const paramsArray = Object.entries(queryParams ?? {}).filter(([key, value]) => Boolean(value));
---

<Card title={title}>
  {
    goals.length > 0 ? (
      <article class='flex grow flex-col gap-4'>
        <ul>
          {goals.map((goal) => (
            <GoalRow goal={goal} />
          ))}
        </ul>
      </article>
    ) : (
      <div class='flex justify-center py-8 text-lg'>No Goals</div>
    )
  }
  <footer class='flex justify-center gap-2'>
    <form method='get' class='flex items-center justify-center'>
      <input type='hidden' name='offset' value={offset >= itemsPerPage ? offset - itemsPerPage : itemsPerPage} />
      {paramsArray.map(([key, value]) => <input type='hidden' name={key} value={value} />)}
      <button
        disabled={offset === 0}
        type='submit'
        class={`${offset === 0 ? 'disabled cursor-not-allowed' : 'hover:scale-105 hover:font-semibold'} transition-transform btn `}>
        Previous Page
      </button>
    </form>
    <form method='get' class='flex items-center justify-center'>
      <input type='hidden' name='offset' value={offset ? offset + itemsPerPage : itemsPerPage} />
      {paramsArray.map(([key, value]) => <input type='hidden' name={key} value={value} />)}
      <button
        disabled={currentPage >= totalPages}
        type='submit'
        class={`${goals.length === 0 ? 'disabled cursor-not-allowed' : 'hover:scale-105 hover:font-semibold'} transition-transform btn btn-neutral`}>
        Next Page
      </button>
    </form>
  </footer>
</Card>
