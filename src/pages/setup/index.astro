---
import { createCategory } from '@/api/categories/mutations';
import { setSetupDone } from '@/api/setup/mutations';
import type { ValidationErrors } from '@/types/formValidation.types';
import Layout from '@layouts/Layout.astro';
import { Settings, db, eq } from 'astro:db';
import { ZodError, z } from 'zod';
import { zfd } from 'zod-form-data';
const { user } = Astro.locals;
const [isFirstSetupDone] = await db.select().from(Settings).where(eq(Settings.authorId, user.id));
if (isFirstSetupDone) return Astro.redirect('/goals');

const schema = zfd.formData({
  name: zfd.text(z.string().min(3).max(20)),
});

let validationErrors: ValidationErrors | undefined;

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  try {
    const validated = schema.parse(formData);
    await createCategory(user.id, validated.name);
    await setSetupDone(user.id);

    return Astro.redirect('/goals/new');
  } catch (error) {
    if (error instanceof ZodError) {
      validationErrors = error.flatten().fieldErrors;
    }
  }
}
---

<Layout pageName='Initial Setup'>
  <section transition:animate='none' class='flex w-full grow flex-col justify-center'>
    <header class='space-y-8 py-4'>
      <h1 class='text-center text-5xl lg:text-6xl'><strong>Hello</strong> {user.name}</h1>
      <p class='text-center text-xl font-light'>
        Before we get started, please create a category.<br /> What's your first goal about?
      </p>
    </header>
    <div class='flex justify-center pt-6'>
      <form method='post' class='grid max-w-md gap-2 px-1'>
        <input name='name' id='categories' type='text' placeholder='Category name...' class='input input-bordered' />
        {validationErrors?.name && <span class='text-red-500'>{validationErrors?.name}</span>}

        <button type='submit' class='btn btn-warning'>Submit</button>
      </form>
    </div>
  </section>
</Layout>
