---
import { createCategory } from '@/api/categories/mutations';
import { setSetupDone } from '@/api/setup/mutations';
import type { ValidationErrors } from '@/types/formValidation.types';
import Layout from '@layouts/MainLayout.astro';
import SetupLayout from '@layouts/SetupLayout.astro';
import { ZodError, z } from 'zod';
import { zfd } from 'zod-form-data';
const { setupDone, user } = Astro.locals;
if (setupDone) return Astro.redirect('/goals');

const schema = zfd.formData({
  name: zfd.text(z.string().min(3).max(20))
});

let validationErrors: ValidationErrors | undefined;

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  try {
    const validated = schema.parse(formData);
    await createCategory({
      authorId: user.id,
      name: validated.name
    });
    await setSetupDone(user.id);

    return Astro.redirect('/setup/2');
  } catch (error) {
    if (error instanceof ZodError) {
      validationErrors = error.flatten().fieldErrors;
    }
  }
}
---

<Layout pageName='Initial Setup'>
  <SetupLayout>
    <section class='flex w-full grow flex-col justify-center'>
      <div class='flex justify-center pt-6'>
        <form method='post' class='grid max-w-md gap-2 px-1'>
          <input name='name' id='categories' type='text' placeholder='Category name...' class='input input-bordered' />
          {validationErrors?.name && <span class='text-red-500'>{validationErrors?.name}</span>}

          <button type='submit' class='btn btn-warning'>Submit</button>
        </form>
      </div>
    </section>
  </SetupLayout>
</Layout>
