---
import DatePicker from '@/components/DatePicker.astro';
import RichTextEditor from '@/components/RichTextEditor.astro';
import Select from '@/components/Select.astro';
import TextInput from '@/components/TextInput.astro';
import type { ValidationErrors } from '@/types/formValidation.types';
import type { GoalInsertPayload } from '@/types/goal.types';
import InputContainer from '@components/InputContainer.astro';
import SubmitButton from '@components/SubmitButton.astro';

type GoalInputName = 'title' | 'description' | 'activityId' | 'completionDate' | 'dueDate';
type GoalInputValue = {
  label: string;
  inputName: string;
};
const formNames: Record<GoalInputName, GoalInputValue> = {
  title: { label: 'Title', inputName: 'title' },
  description: { label: 'Description', inputName: 'description' },
  activityId: { label: 'Activity', inputName: 'activityId' },
  completionDate: { label: 'Completion Date', inputName: 'completionDate' },
  dueDate: { label: 'Due Date', inputName: 'dueDate' }
};

import type { TActivity, TGoal } from 'db/config';
type Props = {
  goal?: TGoal;
  activities: TActivity[];
  validationErrors?: ValidationErrors<GoalInsertPayload>;
};
const { activities, goal, validationErrors } = Astro.props;
---

<form method='post' class='flex flex-col grow gap-6 rounded-lg bg-base-200 p-4 w-full'>
  <div class='flex flex-wrap gap-2'>
    <InputContainer HTMLFor='title-input' label='Title' errors={validationErrors?.title}>
      <TextInput id='title-input' name={formNames.title.inputName} value={goal?.title} placeholder='Type title...' />
    </InputContainer>
    <InputContainer
      HTMLFor={formNames.activityId.label}
      label={formNames.activityId.label}
      errors={validationErrors?.activityId}>
      <Select
        id='select-activity'
        required
        options={activities}
        optionKey='id'
        optionLabelKey='name'
        value={goal?.activityId}
        name={formNames.activityId.inputName}
      />
    </InputContainer>
    <div class="flex flex-wrap gap-2">
      <InputContainer
        HTMLFor={formNames.completionDate.label}
        label={formNames.completionDate.label}
        errors={validationErrors?.completionDate}>
        <DatePicker
          name={formNames.completionDate.inputName}
          value={goal?.completionDate ? goal.completionDate : new Date()}
        />
      </InputContainer>
      <InputContainer
        HTMLFor={formNames.dueDate.label}
        label={formNames.dueDate.label}
        errors={validationErrors?.dueDate}>
        <DatePicker name={formNames.dueDate.inputName} value={goal?.dueDate} />
      </InputContainer>
    </div>
  </div>

  <div class="grow">
    <InputContainer className='h-full' HTMLFor='description' label={formNames.description.label} errors={validationErrors?.title}>
      <RichTextEditor
        name={formNames.description.inputName}
        id={formNames.description.inputName}
        placeholder='Add new Description...'
        value={goal?.description}
      />
    </InputContainer>
  </div>
  <footer id='save-btn' class='flex justify-end gap-4'>
    <slot />
    <SubmitButton className='!btn-warning disabled:!bg-warning'>{goal ? 'Update' : 'Create'}</SubmitButton>
  </footer>
</form>
