---
import { getMostUsedCategory } from '@/api/categories/queries';
import Fab from '@components/Fab.astro';
import Layout from '@layouts/Layout.astro';
const { user } = Astro.locals;

const mostUsedCategory = await getMostUsedCategory(user.id);
const total = mostUsedCategory.reduce((acc, category) => acc + category.goalCount, 0);
const percentages = mostUsedCategory.map((category) => {
  const percent = (category.goalCount / total) * 100;
  const formattedNum = percent % 1 === 0 ? percent : parseFloat(percent.toFixed(2));
  return formattedNum;
});
---

<Layout pageName='Categories'>
  <section class='card flex max-w-md flex-col gap-8 bg-neutral text-neutral-content'>
    <div class='card-body gap-8'>
      <h1 class='card-title text-2xl font-bold'>Most Used Categories</h1>
      <div class='flex flex-col gap-4'>
        {
          mostUsedCategory.map((category, i) => (
            <div class='flex justify-between gap-2'>
              <div class='col-span-1'>
                <a href={`/categories/${category.categoryId}`} class='hover:font-bold'>
                  {category.categoryName}
                </a>
              </div>
              <div class='col-span-2 flex gap-2'>
                <div
                  class='category-bar origin-right rounded bg-red-500 transition-transform'
                  style={`width: ${percentages[i]}px`}
                />
                {percentages[i]}%
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>
  <Fab href='/categories/new'>+</Fab>
</Layout>
<style>
  @keyframes expand {
    0% {
      transform: scaleX(0);
    }
    100% {
      transform: scaleX(1);
    }
  }
  .category-bar {
    animation: expand 1s ease-in-out;
  }
</style>
